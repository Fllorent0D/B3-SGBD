/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visuprog;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMResult;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

/**
 *
 * @author florentcardoen
 */
public class VisuProg extends javax.swing.JFrame {
    private File xsd;
    private File feedbacks_xml;
    private File xslt;
    private File programmes_xml;
    /**
     * Creates new form VisuProg
     */
    public VisuProg() {
        initComponents();
        xsdLabel.setText("");
        feedbackLabel.setText("");
        xsltLabel.setText("");
        programmesLabel.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        feedbackLabel = new javax.swing.JLabel();
        xsdLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        xsltLabel = new javax.swing.JLabel();
        transformButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        autoOpenCheck = new javax.swing.JCheckBox();
        programmesLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("XML");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        feedbackLabel.setText("jLabel1");

        xsdLabel.setText("jLabel2");

        jButton2.setText("XSD");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("XSLT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        xsltLabel.setText("jLabel3");

        transformButton.setText("Transformer");
        transformButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transformButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Visu");
        jLabel4.setToolTipText("");

        autoOpenCheck.setSelected(true);
        autoOpenCheck.setText("Ouvrir automatiquement");

        programmesLabel.setText("jLabel1");
        programmesLabel.setPreferredSize(new java.awt.Dimension(45, 32));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Prog");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transformButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(xsltLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(feedbackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(programmesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(xsdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autoOpenCheck)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(feedbackLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(programmesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(xsdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(xsltLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autoOpenCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(transformButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser jfc = new JFileChooser();
        File workingDirectory = new File(System.getProperty("user.dir")  + "/files");
        jfc.setCurrentDirectory(workingDirectory);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Fichier feedbacks", "xml");
        jfc.setFileFilter(filter);
        jfc.showDialog(this, "OK");

        if(jfc.getSelectedFile() == null)
            return;

        Pattern p = Pattern.compile("^prog_\\d{4}_\\d{2}_\\d{2}_\\d+_feedback.xml$");
        Matcher m = p.matcher(jfc.getSelectedFile().getName());
        if(!m.matches())
        {
            JOptionPane.showMessageDialog(this,"Le nom du fichier ne correspond pas à un fichier de feedback", "Erreur", JOptionPane.ERROR_MESSAGE);         
            return;
        }
        

        programmes_xml = new File(jfc.getSelectedFile().getAbsoluteFile().toString().replaceFirst("_feedback",""));
        if(!programmes_xml.exists())
        {
            JOptionPane.showMessageDialog(this,"Le fichier de programmation correspondant à ces feedbacks n'ont pas été trouvés", "Erreur", JOptionPane.ERROR_MESSAGE);         
            return;            
        }
        feedbacks_xml = jfc.getSelectedFile();
        feedbackLabel.setText(feedbacks_xml.getName());
        programmesLabel.setText(programmes_xml.getName());

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        xsd = new File(System.getProperty("user.dir")  + "/files/feedback.xsd");
        if(!xsd.exists())
        {
            JFileChooser jfc = new JFileChooser();
            File workingDirectory = new File(System.getProperty("user.dir")  + "/files");
            jfc.setCurrentDirectory(workingDirectory);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Fichiers XSD", "xsd");
            jfc.setFileFilter(filter);
            jfc.showDialog(this, "OK");

            if(jfc.getSelectedFile() == null)
                return;

            xsd = jfc.getSelectedFile();
        }
        xsdLabel.setText(xsd.getName());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        xslt = new File(System.getProperty("user.dir")  + "/files/stylesheet.xsl");
        if(!xslt.exists())
        {
            JFileChooser jfc = new JFileChooser();
            File workingDirectory = new File(System.getProperty("user.dir") + "/files");
            jfc.setCurrentDirectory(workingDirectory);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Feuille de style", "xsl");
            jfc.setFileFilter(filter);
            jfc.showDialog(this, "OK");

            if(jfc.getSelectedFile() == null)
                return;

            xslt = jfc.getSelectedFile();
        }
        xsltLabel.setText(xslt.getName());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void transformButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transformButtonActionPerformed
        if(feedbacks_xml == null || xsd == null || xslt == null)
            return;
        
        
        Document feedbacks;
        Document html;

        try {
            feedbacks = loadXml(feedbacks_xml);    
            validateDom(feedbacks);
            transformDom(feedbacks);
            if(!autoOpenCheck.isSelected())
                JOptionPane.showMessageDialog(this, "La page HTML à été générée", "Transformation", JOptionPane.OK_OPTION);         
    
        } catch (ParserConfigurationException | SAXException | IOException | TransformerException ex) {
            Logger.getLogger(VisuProg.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erreur", JOptionPane.PLAIN_MESSAGE);         
        }
        
        
        
    }//GEN-LAST:event_transformButtonActionPerformed
    private Document loadXml(File file) throws ParserConfigurationException, SAXException, IOException
    {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
        Document doc = (Document) dBuilder.parse(file);
        return doc;
    }
    private void validateDom(Document docu) throws SAXException, IOException
    {
        SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
        Source schemaFile = new StreamSource(xsd);
        Schema schema = factory.newSchema(schemaFile);
        Validator validator = schema.newValidator();
        validator.validate(new DOMSource(docu));
    }
    private void transformDom(Document doc) throws TransformerException, IOException
    {
        Source xmlSource = new DOMSource(doc);
        String output = feedbacks_xml.getAbsolutePath().substring(0, feedbacks_xml.getAbsolutePath().lastIndexOf('.')) + ".html";
        
        StreamResult result = new StreamResult(output);
        StreamSource stylesource = new StreamSource(xslt);


        TransformerFactory transFact= TransformerFactory.newInstance();
        Transformer trans = transFact.newTransformer(stylesource);
        trans.setParameter("prog", programmes_xml.getName());
        trans.transform(xmlSource, result);
        
        if(autoOpenCheck.isSelected())
            Desktop.getDesktop().open(new File(output));

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisuProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisuProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisuProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisuProg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(VisuProg.class.getName()).log(Level.SEVERE, null, ex);
                }
                new VisuProg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoOpenCheck;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel programmesLabel;
    private javax.swing.JButton transformButton;
    private javax.swing.JLabel xsdLabel;
    private javax.swing.JLabel xsltLabel;
    // End of variables declaration//GEN-END:variables
}
